import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";

const banner =
	`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin at
https://github.com/D4NZ-jpg/obsidian-web-archiver
*/
`;

const copyPlugin = {
	name: 'copy',
	setup(build) {
		build.onStart(async () => {
			// Create dist folder if needed
			if (!fs.existsSync("dist")) {
				fs.mkdirSync("dist");
			}

			// Copy files
			const filesToCopy = ['./styles.css', 'manifest.json'];
			for (const file of filesToCopy) {
				fs.copyFileSync(file, `dist/${file}`);
			}
		});
	},
}

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "dist/main.js",
	plugins: [copyPlugin],
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
